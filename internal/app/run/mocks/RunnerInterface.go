// Code generated by mockery v2.53.5. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	runnerv1 "code.forgejo.org/forgejo/actions-proto/runner/v1"
)

// RunnerInterface is an autogenerated mock type for the RunnerInterface type
type RunnerInterface struct {
	mock.Mock
}

// Run provides a mock function with given fields: ctx, task
func (_m *RunnerInterface) Run(ctx context.Context, task *runnerv1.Task) error {
	ret := _m.Called(ctx, task)

	if len(ret) == 0 {
		panic("no return value specified for Run")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *runnerv1.Task) error); ok {
		r0 = rf(ctx, task)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewRunnerInterface creates a new instance of RunnerInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRunnerInterface(t interface {
	mock.TestingT
	Cleanup(func())
},
) *RunnerInterface {
	mock := &RunnerInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
